# A expressão cron 0 0 * * 0
# significa que o workflow será executado às 00:00 horas todos os domingos.

name: Purge Old Workflows

on:
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:

jobs:
  purge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Purge Old Workflows
        run: |
          # Replace <OWNER> and <REPO> with your repository information
          REPO_OWNER=<OWNER>
          REPO_NAME=<REPO>

          # Calculate the time of one week ago
          ONE_WEEK_AGO=$(date -d "1 week ago" +%s)

          # Get the list of workflows
          WORKFLOWS_JSON=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X GET https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/workflows)

          # Parse the list of workflows
          WORKFLOWS=$(echo $WORKFLOWS_JSON | jq '.[].id')

          # Loop through each workflow
          for WORKFLOW_ID in $WORKFLOWS; do
            # Get the workflow details
            WORKFLOW_JSON=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X GET https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/workflows/$WORKFLOW_ID)

            # Extract the last_run time
            LAST_RUN=$(echo $WORKFLOW_JSON | jq '.last_run.finished_at')

            # If the last_run time is older than one week ago, delete the workflow
            if [ ! -z "$LAST_RUN" ] && [ "$LAST_RUN" != "null" ] && [ $(date -d "$LAST_RUN" +%s) -lt $ONE_WEEK_AGO ]; then
              curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X DELETE https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/workflows/$WORKFLOW_ID
            fi
          done
